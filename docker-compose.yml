version: '3'

services:

  #
  # Run a development server
  #
  # This 'service' runs a developments version of the system
  #     It is close to the production service:
  #     It spins up a
  #         * Database
  # The systems are in developments mode (xdebug enabled)
  # Apache is mapped to port 7070
  #
  # $ docker compose up -d run
  #
  run:
    container_name: local-althingi-source-run
    labels:
        - althingi_service=source
    build:
      args:
        - ENV=development
      context: .
      dockerfile: Dockerfile
    ports:
      - 7070:80
    volumes:
      - ./config/:/var/www/config
      - ./src/:/var/www/src
      - ./tests/:/var/www/tests
      - ./public/:/var/www/public
      - ./bin/:/var/www/bin
      - ./coverage/:/var/www/coverage
      - ./schema/:/var/www/schema
      - ./composer.json:/var/www/composer.json
      - ./composer.lock:/var/www/composer.lock
      - ./vendor/:/var/www/vendor
      - ./phpunit.xml.dist/:/var/www/phpunit.xml
    environment:
      - LOG_PATH=php://stdout
    #   - LOG_LEVEL=DEBUG
      - LOG_LEVEL=WARNING
    #               INFO NOTICE WARNING ERROR CRITICAL ALERT EMERGENCY

      - DB_HOST=database
      - DB_PORT=3306
      - DB_NAME=${ENV_DB_NAME:-althingi}
      - DB_USER=${ENV_DB_USER:-root}
      - DB_PASSWORD=${ENV_DB_PASSWORD:-example}

    #   - BROKER=${ENV_BROKER:-kafka}
      - BROKER=none
      - BROKER_HOST=host.docker.internal:9092
      - BROKER_CONFIG=all
      - DOCUMENT_SERVER=${ENV_DOCUMENT_SERVER:-localhost:7070}
      - DOCUMENT_DEFINITION=${ENV_DOCUMENT_DEFINITION:-/openapi}
    depends_on:
      - database
    # networks:
    #     - x-althingi
    command: '/var/www/bin/wait-for-it.sh -h database -p 3306 -- /var/www/bin/start'

  #
  # Run complete Test suite
  #
  # This 'service' is mostly meant for CI/CD. It will spin up
  # a test-database and then run
  #     * phpunit
  #     * phpcs
  # It does not spin up any Queues or Brokers.
  #
  # $ docker compose run --rm test
  #
  test:
    container_name: local-althingi-source-test
    build:
      args:
        - ENV=development
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./composer.json/:/var/www/composer.json
      - ./composer.lock/:/var/www/composer.lock
      - ./coverage/:/var/www/coverage
      - ./config/:/var/www/config
    #   - ./vendor/:/var/www/vendor
      - ./src/:/var/www/src
      - ./public/:/var/www/public
      - ./tests/:/var/www/tests
      - ./bin/:/var/www/bin
      - ./schema/:/var/www/schema
      - ./phpcs.xml:/var/www/phpcs.xml
      - ./phpunit.xml.dist:/var/www/phpunit.xml
    environment:
      - LOG_PATH=none

      - DB_HOST=database-test
      - DB_PORT=3306
      - DB_NAME=althingi
      - DB_USER=root
      - DB_PASSWORD=example

      - BROKER=none

      - DOCUMENT_SERVER=${ENV_DOCUMENT_SERVER:-localhost:8080}
      - DOCUMENT_DEFINITION=${ENV_DOCUMENT_DEFINITION:-/openapi}

    depends_on:
      - database-test
    command: '/var/www/bin/wait-for-it.sh -h database-test -p 3306 -- /var/www/bin/test'

  #
  # Additional services used for development.
  #
  # * A database for 'run' service
  #
  database:
    container_name: local-althingi-source-db
    image: einarvalur/althingi-source-db:97bec3d2041832e170f4185167d515f0f0bcff4c
    restart: always
    ports:
        - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${ENV_DB_PASSWORD:-example}
      - MYSQL_DATABASE=${ENV_DB_NAME:-althingi}
    volumes:
      - local-source-db-volume:/var/lib/mysql
    # networks:
    #     - x-althingi
    command: --default-authentication-plugin=mysql_native_password

  database-test:
    container_name: local-althingi-source-db-test
    image: einarvalur/althingi-source-db:97bec3d2041832e170f4185167d515f0f0bcff4c
    restart: always
    environment:
      - MYSQL_DATABASE=althingi
      - MYSQL_ROOT_PASSWORD=example
    volumes:
      - local-source-db-test-volume:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

# networks:
#     x-althingi:
#         driver: bridge

volumes:
    local-source-db-volume:
    local-source-db-test-volume:
