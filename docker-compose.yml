version: '3'

services:

  #
  # Run a development server
  #
  # This 'service' runs a developments version of the system
  #     It is close to the production service:
  #     It spins up a
  #         * Database
  #         * Zookeeper
  #         * Kafka
  # The systems are in developments mode (xdebug enabled)
  # Apache is mapped to port 7070
  #
  # $ docker compose up -d run
  #
  run:
    container_name: local-althingi-source-run
    build:
      args:
        - ENV=development
      context: .
      dockerfile: Dockerfile
    ports:
      - 7070:80
    volumes:
      - ./config/:/var/www/config
      - ./src/:/var/www/src
      - ./tests/:/var/www/tests
      - ./public/:/var/www/public
      - ./bin/:/var/www/bin
      - ./composer.json:/var/www/composer.json
      - ./composer.lock:/var/www/composer.lock
      - ./vendor/:/var/www/vendor
      - ./phpunit.xml.dist/:/var/www/phpunit.xml
    environment:
      - LOG_PATH=php://stdout

      - ENVIRONMENT=development

      - DB_HOST=database
      - DB_PORT=3306
      - DB_NAME=${ENV_DB_NAME:-althingi}
      - DB_USER=${ENV_DB_USER:-root}
      - DB_PASSWORD=${ENV_DB_PASSWORD:-example}

      - CACHE_TYPE=none

      - BROKER=${ENV_BROKER:-kafka}
      - BROKER_HOST=kafka:9092

      - DOCUMENT_SERVER=${ENV_DOCUMENT_SERVER:-localhost:8080}
      - DOCUMENT_DEFINITION=${ENV_DOCUMENT_DEFINITION:-/openapi}

      - INDEXER_STALL_TIME=${ENV_INDEXER_STALL_TIME:-150000}
    depends_on:
      - database
      - zookeeper
      - kafka

  #
  # Run complete Test suite
  #
  # This 'service' is mostly meant for CI/CD. It will spin up
  # a test-database and then run
  #     * phpunit
  #     * phpcs
  # It does not spin up any Queues or Brokers.
  #
  # $ docker compose run --rm test
  #
  test:
    container_name: local-althingi-source-test
    build:
      args:
        - ENV=development
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./composer.json/:/var/www/composer.json
      - ./composer.lock/:/var/www/composer.lock
      - ./config/:/var/www/config
      #- ./vendor/:/var/www/vendor
      - ./src/:/var/www/src
      - ./public/:/var/www/public
      - ./tests/:/var/www/tests
      - ./bin/:/var/www/bin
      - ./phpcs.xml:/var/www/phpcs.xml
      - ./phpunit.xml.dist:/var/www/phpunit.xml
      - ./auto/wait-for.sh:/var/www/wait-for.sh
    environment:
      - ENVIRONMENT=development

      - LOG_PATH=none

      - DB_HOST=database-test
      - DB_PORT=3306
      - DB_NAME=althingi
      - DB_USER=root
      - DB_PASSWORD=example

      - CACHE_TYPE=none

      - BROKER=none

      - DOCUMENT_SERVER=${ENV_DOCUMENT_SERVER:-localhost:8080}
      - DOCUMENT_DEFINITION=${ENV_DOCUMENT_DEFINITION:-/openapi}

      - INDEXER_STALL_TIME=${ENV_INDEXER_STALL_TIME:-150000}
    depends_on:
      - database-test
    command: bash -c "./wait-for.sh database-test:3306 -t 80 -- echo \"MySQL up\" &&  ./vendor/bin/phpunit && ./vendor/bin/phpcs --standard=./phpcs.xml ./src"

  #
  # Additional services used for development.
  #
  # * A database for 'run' service
  # * A Zookeper for 'run' service
  # * A Kafka for 'run' service
  #
  # * A database for 'test' service
  #
  database:
    container_name: local-althingi-source-db
    image: einarvalur/althingi-source-db:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=example
    volumes:
      - source-db-volume-development:/var/lib/mysql

  database-test:
    container_name: local-althingi-source-db-test
    image: einarvalur/althingi-source-db:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=example

  zookeeper:
    container_name: local-althingi-source-zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    container_name: local-althingi-source-kafka
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9092"
    environment:
      DOCKER_API_VERSION: 1.22
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  #
  # A web-based UI to monitor Kafka/Zookeeper
  #
  # Handy tool in development to monitor Topics, Messages, etc
  #
  # This service is not in the dependency list of 'run', so it needs
  # to be started separately
  #
  # Mapps to port 8080
  #
  # $ docker compose up -d kafka-ui
  #
  kafka-ui:
    container_name: local-althingi-source-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
        - 8080:8080
    environment:
        - KAFKA_CLUSTERS_0_NAME=local
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092


volumes:
    source-db-volume-development:
